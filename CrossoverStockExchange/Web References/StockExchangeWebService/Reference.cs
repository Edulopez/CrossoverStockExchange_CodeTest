//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// 
// This source code was auto-generated by Microsoft.VSDesigner, Version 4.0.30319.42000.
// 
#pragma warning disable 1591

namespace CrossoverStockExchange.StockExchangeWebService {
    using System;
    using System.Web.Services;
    using System.Diagnostics;
    using System.Web.Services.Protocols;
    using System.Xml.Serialization;
    using System.ComponentModel;
    
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Web.Services.WebServiceBindingAttribute(Name="StockExchangeWebServiceSoap", Namespace="http://tempuri.org/")]
    public partial class StockExchangeWebService : System.Web.Services.Protocols.SoapHttpClientProtocol {
        
        private System.Threading.SendOrPostCallback GetAllStockOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllStockByCodeListOperationCompleted;
        
        private System.Threading.SendOrPostCallback GetAllStockByUserIdOperationCompleted;
        
        private bool useDefaultCredentialsSetExplicitly;
        
        /// <remarks/>
        public StockExchangeWebService() {
            this.Url = global::CrossoverStockExchange.Properties.Settings.Default.CrossoverStockExchange_StockExchangeWebService_StockExchangeWebService;
            if ((this.IsLocalFileSystemWebService(this.Url) == true)) {
                this.UseDefaultCredentials = true;
                this.useDefaultCredentialsSetExplicitly = false;
            }
            else {
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        public new string Url {
            get {
                return base.Url;
            }
            set {
                if ((((this.IsLocalFileSystemWebService(base.Url) == true) 
                            && (this.useDefaultCredentialsSetExplicitly == false)) 
                            && (this.IsLocalFileSystemWebService(value) == false))) {
                    base.UseDefaultCredentials = false;
                }
                base.Url = value;
            }
        }
        
        public new bool UseDefaultCredentials {
            get {
                return base.UseDefaultCredentials;
            }
            set {
                base.UseDefaultCredentials = value;
                this.useDefaultCredentialsSetExplicitly = true;
            }
        }
        
        /// <remarks/>
        public event GetAllStockCompletedEventHandler GetAllStockCompleted;
        
        /// <remarks/>
        public event GetAllStockByCodeListCompletedEventHandler GetAllStockByCodeListCompleted;
        
        /// <remarks/>
        public event GetAllStockByUserIdCompletedEventHandler GetAllStockByUserIdCompleted;
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStock", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlainStock[] GetAllStock() {
            object[] results = this.Invoke("GetAllStock", new object[0]);
            return ((PlainStock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStockAsync() {
            this.GetAllStockAsync(null);
        }
        
        /// <remarks/>
        public void GetAllStockAsync(object userState) {
            if ((this.GetAllStockOperationCompleted == null)) {
                this.GetAllStockOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStockOperationCompleted);
            }
            this.InvokeAsync("GetAllStock", new object[0], this.GetAllStockOperationCompleted, userState);
        }
        
        private void OnGetAllStockOperationCompleted(object arg) {
            if ((this.GetAllStockCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStockCompleted(this, new GetAllStockCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStockByCodeList", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlainStock[] GetAllStockByCodeList(string[] stockCodes) {
            object[] results = this.Invoke("GetAllStockByCodeList", new object[] {
                        stockCodes});
            return ((PlainStock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStockByCodeListAsync(string[] stockCodes) {
            this.GetAllStockByCodeListAsync(stockCodes, null);
        }
        
        /// <remarks/>
        public void GetAllStockByCodeListAsync(string[] stockCodes, object userState) {
            if ((this.GetAllStockByCodeListOperationCompleted == null)) {
                this.GetAllStockByCodeListOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStockByCodeListOperationCompleted);
            }
            this.InvokeAsync("GetAllStockByCodeList", new object[] {
                        stockCodes}, this.GetAllStockByCodeListOperationCompleted, userState);
        }
        
        private void OnGetAllStockByCodeListOperationCompleted(object arg) {
            if ((this.GetAllStockByCodeListCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStockByCodeListCompleted(this, new GetAllStockByCodeListCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        [System.Web.Services.Protocols.SoapDocumentMethodAttribute("http://tempuri.org/GetAllStockByUserId", RequestNamespace="http://tempuri.org/", ResponseNamespace="http://tempuri.org/", Use=System.Web.Services.Description.SoapBindingUse.Literal, ParameterStyle=System.Web.Services.Protocols.SoapParameterStyle.Wrapped)]
        public PlainStock[] GetAllStockByUserId(string userId) {
            object[] results = this.Invoke("GetAllStockByUserId", new object[] {
                        userId});
            return ((PlainStock[])(results[0]));
        }
        
        /// <remarks/>
        public void GetAllStockByUserIdAsync(string userId) {
            this.GetAllStockByUserIdAsync(userId, null);
        }
        
        /// <remarks/>
        public void GetAllStockByUserIdAsync(string userId, object userState) {
            if ((this.GetAllStockByUserIdOperationCompleted == null)) {
                this.GetAllStockByUserIdOperationCompleted = new System.Threading.SendOrPostCallback(this.OnGetAllStockByUserIdOperationCompleted);
            }
            this.InvokeAsync("GetAllStockByUserId", new object[] {
                        userId}, this.GetAllStockByUserIdOperationCompleted, userState);
        }
        
        private void OnGetAllStockByUserIdOperationCompleted(object arg) {
            if ((this.GetAllStockByUserIdCompleted != null)) {
                System.Web.Services.Protocols.InvokeCompletedEventArgs invokeArgs = ((System.Web.Services.Protocols.InvokeCompletedEventArgs)(arg));
                this.GetAllStockByUserIdCompleted(this, new GetAllStockByUserIdCompletedEventArgs(invokeArgs.Results, invokeArgs.Error, invokeArgs.Cancelled, invokeArgs.UserState));
            }
        }
        
        /// <remarks/>
        public new void CancelAsync(object userState) {
            base.CancelAsync(userState);
        }
        
        private bool IsLocalFileSystemWebService(string url) {
            if (((url == null) 
                        || (url == string.Empty))) {
                return false;
            }
            System.Uri wsUri = new System.Uri(url);
            if (((wsUri.Port >= 1024) 
                        && (string.Compare(wsUri.Host, "localHost", System.StringComparison.OrdinalIgnoreCase) == 0))) {
                return true;
            }
            return false;
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Xml", "4.6.79.0")]
    [System.SerializableAttribute()]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    [System.Xml.Serialization.XmlTypeAttribute(Namespace="http://tempuri.org/")]
    public partial class PlainStock {
        
        private int idField;
        
        private string codeField;
        
        private decimal priceField;
        
        /// <remarks/>
        public int Id {
            get {
                return this.idField;
            }
            set {
                this.idField = value;
            }
        }
        
        /// <remarks/>
        public string Code {
            get {
                return this.codeField;
            }
            set {
                this.codeField = value;
            }
        }
        
        /// <remarks/>
        public decimal Price {
            get {
                return this.priceField;
            }
            set {
                this.priceField = value;
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetAllStockCompletedEventHandler(object sender, GetAllStockCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStockCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStockCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlainStock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlainStock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetAllStockByCodeListCompletedEventHandler(object sender, GetAllStockByCodeListCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStockByCodeListCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStockByCodeListCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlainStock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlainStock[])(this.results[0]));
            }
        }
    }
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    public delegate void GetAllStockByUserIdCompletedEventHandler(object sender, GetAllStockByUserIdCompletedEventArgs e);
    
    /// <remarks/>
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Web.Services", "4.6.79.0")]
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.ComponentModel.DesignerCategoryAttribute("code")]
    public partial class GetAllStockByUserIdCompletedEventArgs : System.ComponentModel.AsyncCompletedEventArgs {
        
        private object[] results;
        
        internal GetAllStockByUserIdCompletedEventArgs(object[] results, System.Exception exception, bool cancelled, object userState) : 
                base(exception, cancelled, userState) {
            this.results = results;
        }
        
        /// <remarks/>
        public PlainStock[] Result {
            get {
                this.RaiseExceptionIfNecessary();
                return ((PlainStock[])(this.results[0]));
            }
        }
    }
}

#pragma warning restore 1591